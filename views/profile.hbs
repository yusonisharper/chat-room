<!doctype html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="/css/style.css">
</head>

<body>
    <div class="home-header">
        <h1>Chatroom</h1><br>
    </div>

    <div class="list-container">
        <div id="list"></div>
    </div>

    <button onclick="goBack()" class="goback-button"></button>
    
    <button onclick="createRoom()" class="create-button"></button>

    <h5>My Profile</h5><br>

    <div class="profile-container">
        <div class="profile">
    <form action="/user/{{username}}/profile/update" method="post">
        <br><label for="gender">Gender:</label><br>
        <select name="gender" id="gender">
            <option value="male" {{#if (eq gender "male")}}selected{{/if}}>Male</option>
            <option value="female" {{#if (eq gender "female")}}selected{{/if}}>Female</option>
            <option value="other" {{#if (eq gender "other")}}selected{{/if}}>Others</option>
        </select><br><br>

        <label for="age">Age:</label><br>
        <input type="number" id="age" name="age" value="{{age}}"><br><br>

        <label for="introduction">Introduction:</label><br>
        <textarea id="introduction" name="introduction" rows="4" cols="50">{{introduction}}</textarea><br>

        <br><input type="submit" value="Update">
    </form>
    </div>
    </div>
    

    <script>
        var roomList = [];
        const userUrl = localStorage.getItem('userUrl');
    const list = document.getElementById('list');
    fetchData();
    async function fetchData() {
        try {
            const response = await fetch(`http://localhost:8080/roomList`);
            const data = await response.json();
            console.log(data);
            roomList = data;
        } catch (error) {
            console.error('Error fetching data:', error);
        }
        let listContainer = document.createElement('div');
        roomList.forEach(room => {
            const listItem = document.createElement('div');
            listItem.classList.add('room-item');

            const roomName = document.createElement('span');
            roomName.classList.add('room-name');
            roomName.textContent = room.roomName;

            const roomID = document.createElement('span');
            roomID.classList.add('room-id');
            roomID.textContent = '#' + room.roomID;

            listItem.appendChild(roomName);
            listItem.appendChild(roomID);
            listItem.onclick = function() {
                window.location.href = 'http://localhost:8080/' + room.roomID;
            };

            listContainer.appendChild(listItem);
        });
        list.innerHTML = '';
        list.appendChild(listContainer);
    }

    setInterval(fetchData, 3000);

    async function createRoom() {
        var roomName = prompt("Please enter room name", "roomName");
        try {
            const response = await fetch('http://localhost:8080/newRoom', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ roomName }),
            });
            const result = await response.json();
            alert(result);
            fetchData();
        } catch (error) {
            console.error('Error creating room:', error);
        }
    }

        // Function for Sign Up
        async function signUp() {
            var username = prompt("Please enter username", "username");
            var password = prompt("Please enter password", "password");
            if (username && password) {
                try {
                    const response = await fetch('http://localhost:8080/signup', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ username, password }),
                    });
                    const result = await response.json();
                    alert(result.message || 'Sign Up successful');
                } catch (error) {
                    console.error('Error signing up:', error);
                }
            } else {
                alert('Username and password cannot be empty');
            }
        }

        // Function for Log In
        async function logIn() {
            var username = prompt("Please enter username", "username");
            var password = prompt("Please enter password", "password");
            if (username && password) {
                try {
                    const response = await fetch('http://localhost:8080/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ username, password }),
                    });
                    const result = await response.json();
                    if (result.token) {
                        alert('Log In successful');
                        // Save token and update UI
                        localStorage.setItem('token', result.token);
                        updateAuthUI(result.username);
                        window.location.href = `http://localhost:8080/user/${result.username}`; // Redirect to the new URL
                    } else {
                        alert(result.error || 'Log In failed');
                    }
                } catch (error) {
                    console.error('Error logging in:', error);
                }
            } else {
                alert('Username and password cannot be empty');
            }
        }

        // Function to update auth UI after login
        function updateAuthUI(username) {
            const authButtons = document.getElementById('auth-buttons');
            authButtons.innerHTML = `
                <span>Welcome, ${username}</span>
                <button type="button" onclick="viewProfile()">My Profile</button>
                <button type="button" onclick="logOut()">Log Out</button>
            `;
        }

        // Function to view profile
        function viewProfile() {
            const username = '{{username}}';
            window.location.href = `/user/${username}/profile`;
        }


        // Function to log out
        function logOut() {
            localStorage.removeItem('token');
            alert('Logged out successfully');
            window.location.href = '/'; // Redirect to the homepage
        }

        function goBack() {
            window.location.href = userUrl;
        }
    </script>
</body>

