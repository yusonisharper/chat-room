<!doctype html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="/css/style.css">
    <style>
        .auth-buttons {
            position: absolute;
            top: 10px;
            right: 10px;
        }

        .auth-buttons button {
            margin-left: 10px;
        }
    </style>
</head>

<body>
    <div class="auth-buttons" id="auth-buttons">
        {{#if username}}
        <span>Welcome, {{username}}</span>
        <button type="button" onclick="viewProfile()">My Profile</button>
        <button type="button" onclick="logOut()">Log Out</button>
        {{else}}
        <button type="button" onclick="signUp()">Sign Up</button>
        <button type="button" onclick="logIn()">Log In</button>
        {{/if}}
    </div>
    <h1>Welcome to your homepage, {{username}}!</h1><br>
    <div id="list"></div>
    <div class="create-button">
        {{#if username}}
        <button type="button" onclick="createRoom()" style="text-align: center">Create New Room</button>
        {{else}}
        <button type="button" onclick="promptLogin()">Create New Room</button>
        {{/if}}
    </div>

    <script>
        var roomList = [];
        const list = document.getElementById('list');

        // Fetch initial data
        fetchData();

        // Function to fetch room data from server
        async function fetchData() {
            try {
                const response = await fetch(`http://localhost:8080/RoomList`);
                const data = await response.json();
                console.log(data);
                roomList = data;
            } catch (error) {
                console.error('Error fetching data:', error);
            }
            updateRoomList();
        }

        // Function to update the room list in the DOM
        function updateRoomList() {
            let listContainer = document.createElement('div');
            roomList.forEach(room => {
                const listItem = document.createElement('a');
                listItem.textContent = `Room Name: ${room.roomName}, Room ID: ${room.roomID}`;
                {{#if username}}
                listItem.href = 'http://localhost:8080/' + room.roomID;
                {{else}}
                listItem.href = 'javascript:void(0);'; // Disabling link if not logged in
                listItem.onclick = promptLogin; // Prompt login when clicked if not logged in
                {{/if}}
                listContainer.appendChild(listItem);
                const endl = document.createElement('br');
                listContainer.appendChild(endl);
            });
            list.innerHTML = '';
            list.appendChild(listContainer);
        }

        // Set interval to refresh room list every 3 seconds
        setInterval(fetchData, 3000);

        // Function to create a new room
        async function createRoom() {
            var roomName = prompt("Please enter room name", "roomName");
            if (roomName) {
                try {
                    const response = await fetch('http://localhost:8080/newRoom', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ roomName }),
                    });
                    const result = await response.json();
                    alert(result.message || 'Room created successfully');
                    fetchData(); // Refresh the list after creating a new room
                } catch (error) {
                    console.error('Error creating room:', error);
                }
            } else {
                alert('Room name cannot be empty');
            }
        }

        // Function for prompting login
        function promptLogin() {
            alert("You must login first");
        }

        // Function for Sign Up
        async function signUp() {
            var username = prompt("Please enter username", "username");
            var password = prompt("Please enter password", "password");
            if (username && password) {
                try {
                    const response = await fetch('http://localhost:8080/signup', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ username, password }),
                    });
                    const result = await response.json();
                    alert(result.message || 'Sign Up successful');
                } catch (error) {
                    console.error('Error signing up:', error);
                }
            } else {
                alert('Username and password cannot be empty');
            }
        }

        // Function for Log In
        async function logIn() {
            var username = prompt("Please enter username", "username");
            var password = prompt("Please enter password", "password");
            if (username && password) {
                try {
                    const response = await fetch('http://localhost:8080/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ username, password }),
                    });
                    const result = await response.json();
                    if (result.token) {
                        alert('Log In successful');
                        // Save token and update UI
                        localStorage.setItem('token', result.token);
                        updateAuthUI(result.username);
                        window.location.href = `http://localhost:8080/user/${result.username}`; // Redirect to the new URL
                    } else {
                        alert(result.error || 'Log In failed');
                    }
                } catch (error) {
                    console.error('Error logging in:', error);
                }
            } else {
                alert('Username and password cannot be empty');
            }
        }

        // Function to update auth UI after login
        function updateAuthUI(username) {
            const authButtons = document.getElementById('auth-buttons');
            authButtons.innerHTML = `
                <span>Welcome, ${username}</span>
                <button type="button" onclick="viewProfile()">My Profile</button>
                <button type="button" onclick="logOut()">Log Out</button>
            `;
        }

        // Function to view profile
        function viewProfile() {
            alert('Profile page not implemented yet.');
        }

        // Function to log out
        function logOut() {
            localStorage.removeItem('token');
            alert('Logged out successfully');
            window.location.href = '/'; // Redirect to the homepage
        }

    </script>
</body>

</html>
