<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Chatroom - {{ roomName }}</title>
    <link rel="stylesheet" href="/css/style.css">
</head>

<body>
    <h1>Room Name: {{ roomName }}</h1>
    <div class="welcome">
        <p>Room ID: {{ roomID }}</p>
        <p id="nickName">Welcome </p>
        <h2>Messages:</h2>
    </div>
    <div id="msgList"></div>
    <label for="msg">Enter message:</label>
    <input type="text" id="msg" name="msg" required>
    <div class="welcome">
        <br>
        <input type="submit" value="Submit" onclick="newMsg()">
        <br>
        <button type="button" style = "background-color:rgb(227, 5, 5)"onclick="deleteRoom('{{roomID}}')">Delete Room</button>
    </div>


<script>
    var nickName = prompt("Please enter your name", "nickName");
    if (nickName != null) {
        document.getElementById("nickName").innerHTML +=
            nickName + "!";
    }
    var msgList = [];
    const msg = document.getElementById('msgList');
    async function fetchData() {
        try {
            const response = await fetch(`http://localhost:8080/{{roomID}}/messages`);
            const data = await response.json();
            msgList = data;
            console.log(data);
        } catch (error) {
            console.error('Error fetching data:', error);
        }
        let msgContainer = document.createElement('div');
        msgList.forEach(msg => {
            const msgItem = document.createElement('a');
            const date = new Date(msg.created_date);
            const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit', hour12: true };
            const prettyDate = date.toLocaleDateString('en-US', options);
            msgItem.textContent = `${msg.name}: ${msg.body}     -     ${prettyDate}`;
            msgContainer.appendChild(msgItem);
            const endl = document.createElement('br');
            msgContainer.appendChild(endl);
        });
        msg.innerHTML = '';
        msg.appendChild(msgContainer);
    }
    setInterval(fetchData, 3000);
    fetchData();

    async function newMsg() {
        const msgInput = document.getElementById('msg');
        const message = msgInput.value;
        try {
            let date = new Date();
            const response = await fetch('http://localhost:8080/{{roomID}}/messages', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ message, nickName, date }),
            });
            msgInput.value = '';
            fetchData(); // Refresh the msgList after sent new msg
        } catch (error) {
            console.error('Error sending message:', error);
        }
    }

    async function deleteRoom(roomID) {
        try {
            const response = await fetch(`http://localhost:8080/${roomID}-delete`, {
                method: 'POST',
            });
            const result = await response.json();
            console.log(result);
            alert(result);
            window.location.href = 'http://localhost:8080/';
        } catch (error) {
            console.error('Error deleting room:', error);
        }
    }
</script>